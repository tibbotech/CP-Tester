#define TBT_36_RESOLUTION_NOMAL 0	'10-bit mode
#define TBT_36_RESOLUTION_FULL 	1	'13-bot mode
#define	TBT_36_RANGE_1P5G	0	
#define	TBT_36_RANGE_3G		1
#define	TBT_36_RANGE_6G		2
#define	TBT_36_RANGE_12G	3
#define TBT_36_RESOLUTION TBT_36_RESOLUTION_FULL
#define TBT_36_RANGE TBT_36_RANGE_12G
const TBT29_MFG_ID	=&h54
enum errcheck
	TBT29_OK,
	TBT29_WRONG_MFGID,
	TBT29_WRONG_DEVID_REVISION,
	TBT29_NO_SSI_AVAILABLE
end enum

enum tbt29_regs
	TBT29_REG_TA=&h05,
	TBT29_REG_MFGID=&h06,
	TBT29_REG_IDREV=&h07,
	TBT29_REG_RESOL=&h08
end enum
declare function tbt29_read_data(op as tbt29_regs) as word

declare function tbt28_init(use_ssi as no_yes)as ok_ng
declare function tbt28_check() as ok_ng
declare function tbt28_get(readingsrawdata as byte(2)) as word

declare function tbt29_init(use_ssi as no_yes) as errcheck
declare function tbt29_check() as ok_ng
declare function tbt29_get_c() as real
declare function tbt29_get() as integer
declare function tbt30_init(use_ssi as no_yes) as ok_ng
declare function tbt30_check() as ok_ng
declare function tbt30_get_pc(byref humidity as float, byref temperature as float) as ok_ng
declare function tbt30_get(byref humidity as word, byref temperature as word) as ok_ng
declare function tbt35_init(use_ssi as no_yes) as ok_ng
declare function tbt35_check() as ok_ng
declare function tbt35_get() as word
declare function tbt35_get_kpa()as float
declare function tbt36_init(use_ssi as no_yes)as ok_ng
declare function tbt36_check() as ok_ng
declare sub tbt36_get_mg(byref x_value as integer, byref y_value as integer, byref z_value as integer)
declare sub tbt36_get(byref x_value as integer, byref y_value as integer, byref z_value as integer)

